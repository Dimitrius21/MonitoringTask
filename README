Предметная область приложения:
Notification – уведомления(нотификация)
Component – информация о компоненте системы со списком адресов электронной почты куда отправлять сообщения об превышении
порогового уровня.
Limit – информация о пороговом уровне для компонента_системы+ уровень_опасности_события и количестве пришедших нотификаций
для каждой пары.
Email – информация об адресе электронной почты куда необходимо отправлять сообщение при наступлении порогового уровня.
В Notification записываются все пришедшие уведомления, но отправка сообщений о событии (превышение порогового уровня)
производится только если есть запись в Limit для пары компонента_системы+ уровень_опасности_события.

Приложение разбито на 2 части: основной сервис – SystemMonitor – содержит основную логику обработки нотификаций и
MailsService – производит отправку сообщений о событии. Обмен происходит через брокер сообщений RabbitMq.

SystemMonitor, работает на порту 8080, имеет API:
 - Notification:
GET : /api/v1/note/{id} – получить Notification по его id в базе данных(id –порядковый номер записи в БД,
componentId - ид компонента в системе о котором приходит нотификация)
GET : /api/v1/note?[ component=значение&level=значение&page=номер&size=количество&sort=name-asc/desc] – получить список
Notification с возможностью пагинации и фильтрация по ид компонента, уровню опасности события, задается через параметры
запроса.
POST: /api/v1/note – записать(создать) полученную нотификацию. Информация передаются через JSON в теле запроса
 - Component:
GET : /api/v1/component/{componentId} – получить запись о компоненте системы
GET : /api/v1/component – получить список всех зарегистрированных компонент системы
POST : /api/v1/component - записать(создать) информацию о компоненте. Информация предается через JSON в теле запроса.
Запись создается с пустым списком адресов электронной почты для рассылки. Добавление/удаление адреса через отдельный PUT
запрос.
PUT: /api/v1/component – добавить/удалить адрес электронной почты по которому рассылаются сообщения о достижении порогового
уровня для данного компонента. Информация предается через JSON в теле запроса.
DELETE : /api/v1/component/{componentId} -  удалить запись о компоненте из БД

- Limit:
GET : /api/v1/limit/{componentId}/{level} – получить информацию о текущем состоянии limit
GET : /api/v1/limit – получить информацию о всех зарегистрированных limit
POST: /api/v1/limit – создать запись с пороговым уровнем для каждой пары ид_компонента+уровень_опасности_события. Информация
предается через JSON в теле запроса.
PUT: /api/v1/limit – изменить пороговый уровень для пары ид_компонента+уровень_опасности_события. Информация предается через
JSON в теле запроса.
PUT: /api/v1/limit /reset/{componentId}/{level} – сбросить в 0 количество пришедших нотификаций для пары
ид_компонента+уровень_опасности_события. Сброс необходимо производить вручную, в противном случае с каждой пришедшей
нотификацией счетчик будет продолжать увеличиваться и после каждого прихода свыше порогового уровня будет отправляться
сообщение на электронную почту.
DELETE : /api/v1/limit/{componentId}/{level} – удалить запись о limit для указанной пары ид_компонента+уровень_опасности_события
из БД – будет прекращено отслеживание приходящих нотификаций и рассылка сообщений по электронной почте.

- Email:
GET : /api/v1/email /{email} – получить запись email по адресу электронной почты
GET : /api/v1/email – получить список все email в базе данных
POST : /api/v1/email/ - создать запись о email в БД, адрес электронной почты передается в параметрах запроса
DELETE : /api/v1/email/{email} – удалить запись об email из БД

По эндпоинту POST: /graphql находится обработчик запросов в формате Graphql. Данные запросы должны быть аутентифицированы
механизмом базовой аутентификации. В системе создано 2 пользователя с ролями USER и ADMIN. Первый может только делать
запросы на просмотр нотификаций. Для ADMIN доступен весь функционал.
Пользователи жестко закодированы в теле приложения.

MailsService работает на порту 8081.

Запуск приложения docker-compose up.

